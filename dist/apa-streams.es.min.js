let e=null,t=new WeakMap;class r{constructor(e){this.cb=e,this._set=new Set}unhook(){this._set.forEach((e=>e.delete(this)))}}let n=t=>{e=new r(t),e.cb();let n=e;return e=null,n},o=r=>{let s=(e=>{if(Array.isArray(e)||"function"!=typeof e&&"object"!=typeof e)return{val:e};if("function"==typeof e){let t=o(1);return n((()=>t.val=e())),t}return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,"object"==typeof t||"function"==typeof t?o(t):t])))})(r);return new Proxy(s,{get:(r,n,o)=>(((r,n)=>{if(null===e)return;let o;t.has(r)?o=t.get(r).get(n):t.set(r,new Map([[n,o=new Set]])),e._set.add(o),o.add(e)})(r,n),Reflect.get(r,n,o)),set:(e,r,n,o)=>(e[r]!==n&&(Reflect.set(e,r,n,o),((e,r)=>{t.get(e)&&t.get(e).get(r).forEach((({cb:e})=>e()))})(e,r)),!0)})};export{n as hook,o as stream};
//# sourceMappingURL=apa-streams.min.js.map