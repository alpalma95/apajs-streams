let e=null,t=new WeakMap,l=t=>{e=t,t(),e=null},n=l=>{let a="object"==typeof l?Object.fromEntries(Object.entries(l).map((([e,t])=>[e,"object"==typeof t?n(t):t]))):"function"==typeof l?{val:l()}:{val:l};return new Proxy(a,{get:(l,n,a)=>(((l,n)=>{if(null===e)return;let a=new Map,r=new Set;t.has(l)?(a=t.get(l),r=a.get(n)):(t.set(l,a),a=t.get(l),a.set(n,r),r=a.get(n)),r.add(e)})(l,n),Reflect.get(l,n,a)),set:(e,l,n,a)=>(Reflect.set(e,l,n,a),((e,l)=>{t.get(e)&&t.get(e).get(l).forEach((e=>e()))})(e,l),!0)})};export{l as derive,n as stream};
//# sourceMappingURL=apa-streams.min.js.map