let e=null,t=new WeakMap,r=t=>{e=t,t(),e=null},l=n=>{let a=(e=>{let t={object:()=>Object.fromEntries(Object.entries(e).map((([e,t])=>[e,"object"==typeof t?l(t):t]))),function:()=>{let t=l(1);return r((()=>t.val=e())),t}};return t[typeof e]?t[typeof e]():{val:e}})(n);return new Proxy(a,{get:(r,l,n)=>(((r,l)=>{if(null===e)return;let n=new Map,a=new Set;t.has(r)?(n=t.get(r),a=n.get(l)):(t.set(r,n),n=t.get(r),n.set(l,a),a=n.get(l)),a.add(e)})(r,l),Reflect.get(r,l,n)),set:(e,r,l,n)=>(e[r]!==l&&(Reflect.set(e,r,l,n),((e,r)=>{t.get(e)&&t.get(e).get(r).forEach((e=>e()))})(e,r)),!0)})};export{r as derive,l as stream};
//# sourceMappingURL=apa-streams.min.js.map