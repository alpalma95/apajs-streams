let e=null,t=new WeakMap;class n{constructor(e){this.cb=e,this._set=new Set}unhook(){this._set.forEach((e=>e.delete(this)))}}let r=t=>{e=new n(t),e.cb();let r=e;return e=null,r},l=n=>{let o=(e=>{let t={object:()=>Object.fromEntries(Object.entries(e).map((([e,t])=>[e,"object"==typeof t||"function"==typeof t?l(t):t]))),function:()=>{let t=l(1);return r((()=>t.val=e())),t}};return t[typeof e]?t[typeof e]():{val:e}})(n);return new Proxy(o,{get:(n,r,l)=>(((n,r)=>{if(null===e)return;let l;t.has(n)?l=t.get(n).get(r):t.set(n,new Map([[r,l=new Set]])),e._set.add(l),l.add(e)})(n,r),Reflect.get(n,r,l)),set:(e,n,r,l)=>(e[n]!==r&&(Reflect.set(e,n,r,l),((e,n)=>{t.get(e)&&t.get(e).get(n).forEach((({cb:e})=>e()))})(e,n)),!0)})};export{r as hook,l as stream};
//# sourceMappingURL=apa-streams.min.js.map